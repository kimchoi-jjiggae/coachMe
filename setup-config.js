#!/usr/bin/env node

// Voice Journal PWA Configuration Setup Script
// This script helps you set up your API keys without manually editing files

const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('üéôÔ∏è Voice Journal PWA Configuration Setup\n');

const questions = [
    {
        key: 'OPENAI_API_KEY',
        prompt: 'Enter your OpenAI API Key: ',
        required: true
    },
    {
        key: 'SUPABASE_URL',
        prompt: 'Enter your Supabase URL (https://your-project.supabase.co): ',
        required: false
    },
    {
        key: 'SUPABASE_ANON_KEY',
        prompt: 'Enter your Supabase Anon Key: ',
        required: false
    },
    {
        key: 'AUTO_START_VOICE',
        prompt: 'Auto-start voice listening? (y/n): ',
        required: false,
        type: 'boolean'
    }
];

const config = {};

function askQuestion(index) {
    if (index >= questions.length) {
        generateConfigFile();
        return;
    }

    const question = questions[index];
    
    rl.question(question.prompt, (answer) => {
        if (question.required && !answer.trim()) {
            console.log('‚ùå This field is required!');
            askQuestion(index);
            return;
        }

        if (question.type === 'boolean') {
            config[question.key] = answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes';
        } else {
            config[question.key] = answer.trim();
        }

        askQuestion(index + 1);
    });
}

function generateConfigFile() {
    const configContent = `// Voice Journal PWA Configuration
// Auto-generated by setup script

const CONFIG = {
    // OpenAI API Configuration
    OPENAI_API_KEY: '${config.OPENAI_API_KEY}',
    
    // Supabase Configuration
    SUPABASE_URL: '${config.SUPABASE_URL || 'https://your-project.supabase.co'}',
    SUPABASE_ANON_KEY: '${config.SUPABASE_ANON_KEY || 'your_supabase_anon_key_here'}',
    
    // App Settings
    AUTO_START_VOICE: ${config.AUTO_START_VOICE || false},
    AUTO_SAVE_CONVERSATIONS: true,
    
    // Feature Flags
    ENABLE_CLOUD_SYNC: ${config.SUPABASE_URL ? true : false},
    ENABLE_VOICE_RECOGNITION: true,
    ENABLE_AI_CHAT: true
};

// Export for use in other files
if (typeof module !== 'undefined' && module.exports) {
    module.exports = CONFIG;
} else if (typeof window !== 'undefined') {
    window.CONFIG = CONFIG;
}`;

    try {
        fs.writeFileSync('config.js', configContent);
        console.log('\n‚úÖ Configuration saved to config.js');
        console.log('\nüöÄ You can now run your Voice Journal PWA!');
        console.log('   - Local: node server.js');
        console.log('   - Deploy: git push origin main');
        
        if (config.SUPABASE_URL && config.SUPABASE_URL !== 'https://your-project.supabase.co') {
            console.log('\n‚òÅÔ∏è  Cloud sync is enabled!');
        } else {
            console.log('\nüíæ Running in local-only mode (no cloud sync)');
        }
        
    } catch (error) {
        console.error('‚ùå Error saving configuration:', error.message);
    }

    rl.close();
}

// Start the setup process
askQuestion(0);
